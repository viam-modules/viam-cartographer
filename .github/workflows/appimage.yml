name: Build AppImage Cartographer

on:
  workflow_dispatch:
    inputs:
      release_type:
        required: true
        description: Release version for this appimage (latest/rc/stable)
        type: string
        default: latest
  workflow_call:
    inputs:
      release_type:
        required: true
        type: string
    secrets:
      GCP_CREDENTIALS:
        required: true

jobs:
  appimage:
    name: AppImage Build Cartographer
    strategy:
      matrix:
        include:
          - arch: [x64, qemu-host]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
          - arch: [arm64, qemu-host]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
    - name: Check out code
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
      uses: actions/checkout@v3
      with:
        submodules: recursive
      
    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        submodules: recursive

    - name: apt update
      run: |
        sudo apt update

    - name: make clean
      run: |
        chown -R testbot:testbot .
        sudo -u testbot bash -lc 'make clean'
        
    - name: make setup
      run: |
        sudo -u testbot bash -lc 'make setup'

    - name: Authorize GCP Upload
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Build and Package (PR)
      if: contains(github.event.pull_request.labels.*.name, 'appimage') || contains(github.event.pull_request.labels.*.name, 'appimage-ignore-tests')
      run: |
        sudo -u testbot bash -lc 'make BUILD_CHANNEL="pr-${{ github.event.pull_request.number }}" appimage'

    - name: Build and Package (Latest)
      if: inputs.release_type == 'latest'
      run: |
        sudo -Hu testbot bash -lc 'make BUILD_CHANNEL="latest" appimage'

    - name: Build and Package (Tagged)
      if: inputs.release_type == 'stable' || inputs.release_type == 'rc'
      run: |
        sudo -Hu testbot bash -lc 'make RELEASE_TYPE="${{ inputs.release_type }}" BUILD_CHANNEL="${{ github.ref_name }}" appimage'

    - name: Deploy Files
      uses: google-github-actions/upload-cloud-storage@v0.10.4
      with:
        headers: "cache-control: no-cache"
        path: 'etc/packaging/appimages/deploy/'
        destination: 'packages.viam.com/apps/slam-servers/'
        glob: '*'
        parent: false
        gzip: false
