name: Deploy Cartographer Module to Registry

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
  push:
  release:
    types: [released]

env:
  VERSION: ${{ github.ref_name }}

jobs:
  appimage:
    name: AppImage Build and Upload Cartographer to Registry
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: buildjet-8vcpu-ubuntu-2204
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: amd64
          - arch: buildjet-8vcpu-ubuntu-2204-arm
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform linux/${{ matrix.platform }}
    timeout-minutes: 45

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: apt update
      run: |
        sudo apt update

    - name: Clean and Fix Permissions
      run: |
        chown -R testbot:testbot .
        sudo -u testbot bash -lc 'make clean'
        
    - name: make setup
      run: |
        sudo -u testbot bash -lc 'make setup'

    - name: Build appimage
      run: |
        sudo -u testbot bash -lc 'make BUILD_CHANNEL="${{ github.ref_name }}" appimage'

    - name: Bundle module
      run: |
        cp etc/packaging/appimages/deploy/cartographer-module-*.AppImage cartographer-module.AppImage
        tar czf module.tar.gz cartographer-module.AppImage

    - uses: actions/upload-artifact@v3
      with:
        name: appimage-${{ matrix.platform }}
        path: module.tar.gz

  upload:
    needs: appimage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: appimage-${{ matrix.platform }}
    - id: stripped-version
      run: echo version=${VERSION#v} >> $GITHUB_OUTPUT
    - uses: viamrobotics/upload-module@main
      if: github.event_name == 'release' && !contains(github.ref_name, 'rc')
      with:
        platform: linux/${{ matrix.platform }}
        version: ${{ steps.stripped-version.outputs.version }}
        key-id: ${{ secrets.viam_key_id }}
        key-value: ${{ secrets.viam_key_value }}
